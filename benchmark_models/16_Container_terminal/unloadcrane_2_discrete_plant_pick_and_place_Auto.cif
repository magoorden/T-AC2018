import "Input_variables_optional_disc.cif";

import "gripper_motor_uncontrolled_discrete_plant.cif";
import "gripper_switch_sensor_uncontrolled_discrete_plant.cif";
import "lift_motor_uncontrolled_discrete_plant.cif";

Unloadcrane_2_lift_Motor:Crane_Lift_Motor();

Unloadcrane_2_lift_switch_sensor: Switch_Sensor();

Unloadcrane_2_gripper_Motor:Crane_Gripper_Motor();

Unloadcrane_2_gripper_switch_sensor: Switch_Sensor();



requirement Unloadcrane_2_lift_ctivity:

  disc activity action = IDLE;

  location Idle:
    initial; marked;
    edge Unloadcrane_2_lift_Motor.c_rotateAbsoluteDegrees       when (action = IDLE
                                                                       or action = PLACE)
                                                                and   Unloadcrane_2_gripper_Motor.situation = OPEN
                                                                and   Unloadcrane_2_lift_Motor.situation = UP         do action := PICK;

    edge Unloadcrane_2_lift_Motor.c_rotateAbsoluteDegrees       when  action = PICK
                                                                and   Unloadcrane_2_gripper_Motor.situation = CLOSE
                                                                and   Unloadcrane_2_lift_Motor.situation = UP         do action := PLACE;
end

requirement Unloadcrane_2_Open_Close_Lift_and_Lower_the_Gripper:

  location :
    initial; marked;
    edge Unloadcrane_2_gripper_Motor.c_rotateAbsoluteDegrees    when Unloadcrane_2_lift_ctivity.action = PICK
                                                                 and Unloadcrane_2_lift_Motor.situation = DOWN
                                                                 and Unloadcrane_2_gripper_Motor.situation = OPEN;

    edge Unloadcrane_2_gripper_Motor.c_move_backward            when Unloadcrane_2_lift_ctivity.action = PLACE
                                                                 and Unloadcrane_2_lift_Motor.situation = DOWN
                                                                 and Unloadcrane_2_gripper_Motor.situation = CLOSE;

    edge Unloadcrane_2_lift_Motor.c_move_backward               when ((Unloadcrane_2_lift_ctivity.action = PICK
                                                                        and Unloadcrane_2_gripper_Motor.situation = CLOSE)
                                                                or    (Unloadcrane_2_lift_ctivity.action = PLACE
                                                                        and Unloadcrane_2_gripper_Motor.situation = OPEN))
                                                                and Unloadcrane_2_lift_Motor.situation = DOWN;

    edge Unloadcrane_2_lift_switch_sensor.c_notifyWhenClosed    when Unloadcrane_2_lift_Motor.Lifting;

    edge Unloadcrane_2_gripper_switch_sensor.c_notifyWhenClosed when Unloadcrane_2_gripper_Motor.Opening;

end

requirement Unloadcrane_2_Open_Gripper:

  location Move:
    initial; marked;
    edge Unloadcrane_2_gripper_switch_sensor.u_closed                goto Stop;

  location Stop:
    edge Unloadcrane_2_gripper_Motor.u_stopped                       goto Move;

end

requirement Unloadcrane_2_Lifting_Gripper:

  location Move:
    initial; marked;
    edge Unloadcrane_2_lift_switch_sensor.u_closed                   goto Stop;

  location Stop:
    edge Unloadcrane_2_lift_Motor.u_stopped                          goto Move;

end











